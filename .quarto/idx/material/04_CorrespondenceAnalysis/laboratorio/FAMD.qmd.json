{"title":"Anàlisis factorial per a Dades mixtes (FAMD)","markdown":{"yaml":{"title":"Anàlisis factorial per a Dades mixtes (FAMD)","author":"Dante Conti, Sergi Ramirez, (c) IDEAI","date":"`r Sys.Date()`","date-modified":"`r Sys.Date()`","toc":true,"number-sections":true,"format":{"html":{"theme":{"light":"cerulean","dark":"darkly"}}},"editor":"visual"},"headingText":"Introducción","containsRefs":false,"markdown":"\n\n\nEl Análisis Factorial de Datos Mixtos (FAMD) es una potente técnica estadística que se utiliza para analizar conjuntos de datos que contienen variables numéricas y categóricas. Amplía el análisis factorial tradicional para gestionar tipos de datos mixtos, proporcionando una comprensión integral de la estructura subyacente de conjuntos de datos complejos. \n\n```{mermaid}\nflowchart TD\n    cat?(¿BBDD Categorica?) --> |\"✅\"| num_too?(¿Contiene numéricas?)\n    num_too? --> |\"✅\"| FAMD\n    num_too? --> |\"❌\"| multiple_cat?(¿Más de dos columnas?)\n    multiple_cat? --> |\"✅\"| MCA\n    multiple_cat? --> |\"❌\"| CA\n    cat? --> |\"❌\"| groups?(¿Columnas agrupadas?)\n    groups? --> |\"✅\"| MFA\n    groups? --> |\"❌\"| shapes?(Analysing shapes?)\n    shapes? --> |\"✅\"| GPA\n    shapes? --> |\"❌\"| PCA\n```\n\nPara poder realizar los métodos, necesitaremos importar las siguientes librerias: \n\n:::: panel-tabset\n\n## R\n\n```{r}\n#| label: cargar-librerias-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## Import libraries\nlibrary(FactoMineR)\nlibrary(factoextra)\n```\n\n## Python\n\n```{python}\n#| label: cargar-librerias-python\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nimport prince\nfrom light_famd import FAMD\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n::::\n\n# Planteamiento del problema\n\nDescripció de la columna:\n\n-   **Gender:** El gènere del client: Home (1), Femení (0).\n\n-   **SeniorCitizen:** Indica si el client té 65 anys o més: No (0), Sí (1).\n\n-   **Partner:** El contracte de servei és revenut pel soci: No (0), Sí (1).\n\n-   **Dependents:** Indica si el client viu amb algun dependent: No (0), Sí (1).\n\n-   **Tenure:** Indica l'import total de mesos que el client ha estat amb l'empresa.\n\n-   **PhoneService:** Indica si el client es subscriu al servei de telèfon de casa amb l'empresa: No (0), Sí (1).\n\n-   **MultipleLines:** Indica si el client es subscriu a diverses línies telefòniques amb l'empresa: No (0), Sí (1).\n\n-   **InternetService:** Indica si el client es subscriu al servei d'Internet amb l'empresa: No (0), DSL (1), Fibra òptica (2).\n\n-   **OnlineSecurity:** Indica si el client es subscriu a un servei addicional de seguretat en línia prestat per l'empresa: No (0), Sí (1), NA (2).\n\n-   **OnlineBackup:** Indica si el client es subscriu a un servei de backup online addicional proporcionat per l'empresa: No (0), Sí (1), NA (2).\n\n-   **DeviceProtection:** Indica si el client es subscriu a un pla addicional de protecció de dispositius per als seus equips d'Internet proporcionats per l'empresa: No (0), Sí (1), NA (2).\n\n-   **TechSupport:** Indica si el client es subscriu a un pla de suport tècnic addicional de l'empresa amb temps d'espera reduïts: No (0), Sí (1), NA (2).\n\n-   **StreamingTV:** Indica si el client utilitza el seu servei d'Internet per transmetre la programació de televisió d'un proveïdor de tercers: No (0), Sí (1), NA (2). L'empresa no cobra cap càrrec addicional per aquest servei.\n\n-   **StreamingMovies:** Indica si el client utilitza el seu servei d'Internet per transmetre pel·lícules d'un proveïdor de tercers: No (0), Sí (1), NA (2). L'empresa no cobra cap càrrec addicional per aquest servei.\n\n-   **Contract:** Indica el tipus de contracte actual del client: Mes a mes (0), Un any (1), Dos anys (2).\n\n-   **PaperlessBilling:** Indica si el client ha triat facturació sense paper: No (0), Sí (1).\n\n-   **PaymentMethod:** Indica com el client paga la seva factura: transferència bancària - automàtica (0), targeta de crèdit - automàtica (1), xec electrònic (2), xec per correu (3).\n\n-   **MonthlyCharges:** Indica el total de la quota mensual actual del client per a tots els seus serveis de l'empresa.\n\n-   **TotalCharges:** Indica el total de càrrecs del client.\n\n-   **Churn:** Indica si el client es talla o no: No (0), Sí (1).\n\n:::: panel-tabset\n\n## R\n\n```{r}\n#| label: importacion-datos-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## Import data\ndf <- read.csv('https://raw.githubusercontent.com/nchelaru/data-prep/refs/heads/master/telco_cleaned_renamed.csv')\n\n## Preview data\nhead(df)\n```\n\nVisualizamos la estructura de los datos: \n\n```{r}\n#| label: estructura-datos-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nstr(df)\n```\n\n## Python\n\n```{python}\n#| label: importacion-datos-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\npydf = pd.read_csv('https://raw.githubusercontent.com/nchelaru/data-prep/refs/heads/master/telco_cleaned_renamed.csv')\n```\n\nVisualizamos la estructura de los datos: \n\n```{python}\n#| label: estructura-datos-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\npydf.info()\n```\n\n:::: \n\nLos datos contienen 20 columnas divididas en: \n  - **Numéricas**: `Tenure`, `MonthlyCharges` y `TotalCharges`\n  - **Categóricas**: `Gender`, `SeniorCitizen`, `Partner`, `Dependents`, `PhoneService`, `MultipleLines`, `InternetService`, `OnlineSecurity`, `OnlineBackup`, `DeviceProtection`, `TechSupport`, `StreamingTV`, `StreamingMovies`, `Contract`, `PaperlessBilling`, `PaymentMethod` y `Churn` (variable respuesta)\n\n::: {.callout-tip title=\"Consejo\"}\nEl objetivo de este estudio es poder estudiar las relaciones y asociaciones que existen en los clientes de la empresa Telecom.\n:::\n\n## Entrenamiento\n\n:::: panel-tabset\n\n## R\n\nLa función `FAMD()` del paquete `FactoMineR`se puede utilizar para calcular los planos factoriales. La descripción de la función es la siguiente: \n\n```{r}\n#| label: explicación-funcion-R\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nFAMD (base, ncp = 5, sup.var = NULL, ind.sup = NULL, graph = TRUE)\n```\n\n- `base`: Un `data.frame` con n filas (individuos) y p columnas (variables).\n\n- `ncp`: El número de dimensiones que se mantienen en los resultados *(por defecto 5)*\n\n- `sup.var`: Un vector que indica los índices de las variables suplementarias.\n\n- `ind.sup`: Un vector que indica los índices de los individuos suplementarios.\n\n- `graph`: Un valor lógico. Si es `VERDADERO`, se muestra un gráfico.\n\nA continuación, vamos a calcular el FAMD de la siguiente manera: \n\n```{r}\n#| label: calculo-FAMD\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## FAMD\nres.famd <- FAMD(df, sup.var = 20, graph = FALSE, ncp = 25)\n```\n\nLa salida que obtenemos con la función `FAMD()` es una lista que incluye: \n\n```{r}\n#| label: lista-valores-FAMD\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nprint(res.famd)\n```\n\n## Python \n\nLa función `prince.FAMD()` del paquete `prince`se puede utilizar para calcular los planos factoriales. La descripción de la función es la siguiente: \n\n```{python}\n#| label: explicación-funcion-Py\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nfamd = prince.FAMD(n_components = 2, n_iter = 3, copy = True, check_input = True,\n    random_state = 42, engine = \"sklearn\", handle_unknown = \"error\")\n```\n\n- `n_components`: El número de dimensiones que se mantienen en los resultados *(por defecto 2)*\n\n- `n_iter`: El número de iteraciones de las cuales ha de realizar el FAMD *(por defecto 3)*\n\n- `copy`: Indica si queremos realizar una copia o por el contrario de la base de datos\n\n- `check_input`: Valida las variables de entrada\n\n- `random_state`: Asigna una semilla para los cálculos\n\nA continuación, vamos a calcular el FAMD de la siguiente manera: \n\n```{python}\n#| label: calculo-FAMD-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfamd = prince.FAMD(n_components=10, random_state=42)\nfamdPy = famd.fit(pydf)\n```\n\n:::: \n\n\n## Visualización e interpretación\n\nUtilizaremos las siguientes funciones del paquete `factoextra` para poder obtener las interpretaciones correspondientes: \n\n- `get_eigenvalue(res.famd)`: Extraer los valores propios/varianzas retenidas por cada dimensión (eje).\n\n- `fviz_eig(res.famd)`: Visualizar los valores propios/varianzas. \n\n- `get_famd_ind(res.famd)`: Extraer los resultados para individuos. \n\n- `get_famd_var(res.famd)`: Extraer los resultados de las variables cuantitativas y cualitativas.\n\n- `fviz_famd_ind(res.famd)` y `fviz_famd_var(res.famd)`: Visualizar los resultados para individuos y variables, respectivamente. \n\n::: {.callout-tip title=\"Aviso\"}\nRecordad que, para la interpretación de FAMD se ha de realizar lo mismo hecho en clases anteriores en métodos como el ACP, ACS y ACM. \n:::\n\n## Eigenvalues y Eigenvectors\n\n:::: panel-tabset\n\n## R\n\nLa proporción de varianzas retenidas (*eigenvalues*) por las diferentes dimensiones (ejes) se puede extraer utilizando la función `get_eigenvalue()` del paquete `factoextra` de la siguiente manera:\n\n```{r}\n#| label: eigenvalues-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\neig.val <- get_eigenvalue(res.famd)\nhead(eig.val)\n```\n\nLa función `fviz_eig()` o `fviz_screeplot()` del paquete `factoextra` se puede utilizar para dibujar el diagrama de codo (los porcentajes de inercia explicados por cada dimensión de FAMD):\n\n```{r}\n#| label: screePlot-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_screeplot(res.famd)\n```\n\n## Python \n\nLa proporción de varianzas retenidas (*eigenvalues*) por las diferentes dimensiones (ejes) se puede extraer utilizando el método `.eigenvalues_` de la siguiente manera:\n\n```{python}\n#| label: eigenvalues-Python\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\neigenvalues = famd.eigenvalues_\nfamd.eigenvalues_summary\n```\n\nLa función `fviz_eig()` o `fviz_screeplot()` del paquete `factoextra` se puede utilizar para dibujar el diagrama de codo (los porcentajes de inercia explicados por cada dimensión de FAMD):\n\n```{python}\n#| label: screePlot-python\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Hacer el scree plot\nplt.figure(figsize=(8, 5))\nplt.plot(range(1, len(eigenvalues) + 1), eigenvalues, marker='o')\nplt.title('Scree Plot - FAMD')\nplt.xlabel('Componentes')\nplt.ylabel('Valor propio (Eigenvalue)')\nplt.xticks(range(1, len(eigenvalues) + 1))\nplt.grid(True)\nplt.show()\n```\n\n:::: \n\n\n## Variables\n\n### Todas las variables\n\n:::: panel-tabset\n\n## R\n\nLa función `get_mfa_var()` del paquete `factoextra` se utiliza para extraer los resultados de las variables. Por defecto, esta función devuelve una lista con las coordenadas, el coseno$^2$ y la contribución de todas las variables: \n\n```{r}\n#| label: infoVariables-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(var <- get_famd_var(res.famd))\n```\n\n#### Coordenadas de las componentes\n\nSe puede acceder a los diferentes componentes de la siguiente manera: \n\n```{r}\n#| label: componentesVariables-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nhead(var$coord)\n```\n\n#### Coseno$^2$\n\nA continuación se muestra el coseno$^2$ que representa la calidad de la representación en el mapa factorial. \n\n```{r}\n#| label: coseno2-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nhead(var$cos2)\n```\n\n#### Contribuciones\n\nEn el siguiente apartado, podemos visualizar la contribución de cada una de las varaibles a las dimensiones. \n\n```{r}\n#| label: contribuciones-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nhead(var$contrib)\n```\n\nLa siguiente figura muestra la correlación entre las variables, tanto cuantitativas como cualitativas, y las dimensiones principales, así como la contribución de las variables a las dimensiones 1 y 2. Se utilizan las siguientes funciones del paquete `factoextra`:\n\n- `fviz_famd_var()`: para representar gráficamente variables cuantitativas y cualitativas\n\n- `fviz_contrib()`: para visualizar la contribución de las variables a las dimensiones principales\n\n```{r}\n#| label: graficoVariables-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, repel = TRUE)\n```\n\nA continuación vamos a visualizar las contribuciones de las variables en la primera dimensión. \n\n```{r}\n#| label: contribuciones1aDim-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Contribution to the first dimension\nfviz_contrib(res.famd, \"var\", axes = 1)\n```\n\nSeguidamente podemos ver las contribuciones de las variables en la 2a dimensión. \n\n```{r}\n#| label: contribuciones2aDim-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Contribution to the second dimension\nfviz_contrib(res.famd, \"var\", axes = 2)\n```\n\nLa línea discontinua roja en el gráfico anterior indica el valor promedio esperado, si las contribuciones fueran uniformes. \n\nDe los gráficos anteriormente expuestos se puede observar que: \n\n- Las variables más contribuyentes a la primera dimensión són: \n\n  - ...\n  \n- Las variables que más contribuyen a la segunda dimensión son: \n\n  - ...\n  \n## Python \n\n#### Coordenadas de las componentes\n\nSe puede acceder a los diferentes componentes de la siguiente manera: \n\n```{python}\n#| label: componentesVariables-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## famd.row_coordinates(pydf)  ## Individuos\nfamd.column_coordinates_\n```\n\n#### Coseno$^2$\n\nA continuación se muestra el coseno$^2$ que representa la calidad de la representación en el mapa factorial. \n\n```{python}\n#| label: coseno2-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfamd.column_cosine_similarities_\n\n```\n\n#### Contribuciones\n\nEn el siguiente apartado, podemos visualizar la contribución de cada una de las varaibles a las dimensiones. \n\n```{python}\n#| label: contribuciones-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(famd.column_contributions_)\n```\n\nLa siguiente figura muestra la correlación entre las variables, tanto cuantitativas como cualitativas, y las dimensiones principales, así como la contribución de las variables a las dimensiones 1 y 2. \n\n```{python}\n#| label: graficoVariables-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Coordenadas de las variables (componentes 1 y 2)\ncoords = famd.column_coordinates_\n\n# Elegimos los dos primeros componentes\nx = coords[0]\ny = coords[1]\n\nplt.figure(figsize=(8, 8))\nplt.axhline(0, color='gray', lw=1)\nplt.axvline(0, color='gray', lw=1)\n\n# Dibujar solo puntos con etiquetas\nplt.scatter(x, y, color='white')\n\nfor i in range(len(coords)):\n    plt.text(x[i], y[i], coords.index[i], fontsize=9, color=\"red\" , ha='center', va='center')\n\nplt.title(\"Variables en el plano factorial (FAMD)\")\nplt.xlabel(\"Dim 1\")\nplt.ylabel(\"Dim 2\")\nplt.grid(True)\nplt.axis('equal')\nplt.show()\n```\n\nA continuación vamos a visualizar las contribuciones de las variables en la primera dimensión. \n\n```{python}\n#| label: contribuciones1aDim-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Obtener coordenadas de las variables\ncoords = famd.column_coordinates_\n\n# Calcular la contribución (cos²) al eje 1\n# Es la coordenada al cuadrado de cada variable en ese eje\ncontrib = (coords[0] ** 2)\n\n# Normalizar en porcentaje\ncontrib_percent = 100 * contrib / contrib.sum()\n\n# Ordenar de mayor a menor\ncontrib_percent = contrib_percent.sort_values(ascending=False)\n\n# Calcular la media\nmean_contrib = 100 / len(contrib_percent)\n\n# Graficar\nplt.figure(figsize=(10, 6))\nsns.barplot(x=contrib_percent.values, y=contrib_percent.index, palette=\"Blues_d\")\nplt.axvline(mean_contrib, color='red', linestyle='--', label=f'Media = {mean_contrib:.2f}%')\nplt.xlabel('Contribución al componente 1 (%)')\nplt.title('Contribución de variables al eje 1 (FAMD)')\nplt.legend()\nplt.tight_layout()\nplt.show()\n```\n\nSeguidamente podemos ver las contribuciones de las variables en la 2a dimensión. \n\n```{python}\n#| label: contribuciones2aDim-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Obtener coordenadas de las variables\ncoords = famd.column_coordinates_\n\n# Calcular la contribución (cos²) al eje 1\n# Es la coordenada al cuadrado de cada variable en ese eje\ncontrib = (coords[1] ** 2)\n\n# Normalizar en porcentaje\ncontrib_percent = 100 * contrib / contrib.sum()\n\n# Ordenar de mayor a menor\ncontrib_percent = contrib_percent.sort_values(ascending=False)\n\n# Calcular la media\nmean_contrib = 100 / len(contrib_percent)\n\n# Graficar\nplt.figure(figsize=(10, 6))\nsns.barplot(x=contrib_percent.values, y=contrib_percent.index, palette=\"Blues_d\")\nplt.axvline(mean_contrib, color='red', linestyle='--', label=f'Media = {mean_contrib:.2f}%')\nplt.xlabel('Contribución al componente 2 (%)')\nplt.title('Contribución de variables al eje 2 (FAMD)')\nplt.legend()\nplt.tight_layout()\nplt.show()\n```\n\nLa línea discontinua roja en el gráfico anterior indica el valor promedio esperado, si las contribuciones fueran uniformes. \n\nDe los gráficos anteriormente expuestos se puede observar que: \n\n- Las variables más contribuyentes a la primera dimensión són: \n\n  - ...\n  \n- Las variables que más contribuyen a la segunda dimensión son: \n\n  - ...\n\n::::\n\n### Variables cuantitativas\n\nPara extraer los resultados de las variables cuantitativas, se debe realizar el siguiente proceso: \n\n:::: panel-tabset\n\n## R\n\n```{r}\n#| label: varsCuantitativas-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(quanti.var <- get_famd_var(res.famd, \"quanti.var\"))\n```\n\nA continuación vamos a visualizar el círculo unitario tal y como extraiamos de la aplicación del **ACP**. Para no superponer las etiquetas de las variables numéricas, vamos a utilizar el parámetro `repel = TRUE`. \n\n\n```{r}\n#| label: circuloUnitario-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quanti.var\", repel = TRUE,\n              col.var = \"black\")\n```\n\nEl gráfico de variables (círculo unitario) muestra la relación entre las variables, la calidad de su representación, así como la correlación entre las variables y las dimensiones.\n\nLas variables cuantitativas más contribuyentes se pueden resaltar en el diagrama de dispersión mediante el argumento `col.var = \"contrib\"`. Esto produce un degradado de colores, que se puede personalizar mediante el argumento `gradient.cols`.\n\n```{r}\n#| label: circulo Unitario Contribuciones-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quanti.var\", col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\nDel mismo modo, puede resaltar variables cuantitativas utilizando sus valores cos$^2$ que representan la calidad de la representación en el mapa factorial. Si una variable está bien representada por dos dimensiones, la suma del cos$^2$ se aproxima a uno. Para algunos de los elementos, es posible que se requieran más de 2 dimensiones para representar perfectamente los datos.\n\n```{r}\n#| label: circulo unitario calidad-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quanti.var\", col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\n## Python \n\n\n\n::::\n\n### Variables cualitativas \n\nAl igual que las variables cuantitativas, los resultados de las variables cualitativas se pueden extraer de la siguiente manera:\n\n```{r}\n#| label: varsCualitativas-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(quali.var <- get_famd_var(res.famd, \"quali.var\"))\n```\n\nPara visualizar las variables cualitativas, se ha de escribir el siguiente código: \n\n```{r}\n#| label: varsCualitativasContribucion-R\n\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quali.var\", col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n```\n\nLa gráfica anterior muestra las categorías de las variables categóricas. \n\n## Individuos\n\nSi se desean hacer gráficos individuales se realiza lo siguiente.\n\n```{r}\n#| label: individuos-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(ind <- get_famd_ind(res.famd))\n```\n\nPara representar gráficamente a los individuos, utilizaremos la función `fviz_mfa_ind()` del paquete `factoextra`. Por defecto, los individuos están coloreados en azul. Sin embargo, al igual que las variables, también es posible colorear a los individuos por sus valores de cos2 y contribución:\n\n```{r}\n#| label: individuos-coseno2-R\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_ind(res.famd, col.ind = \"cos2\", \n             gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\nLas categorias de las variables cualitativas se muestran en negro. Para poder eliminar dichas modalidades, utilizamos el parámetro `invisible = \"quali.var\"`. \n\nLos individuos con perfiles similares se encuentran cerca en el mapa factorial.\n\nEs posible colorear a los individuos utilizando cualquiera de las variables cualitativas en la tabla de datos inicial. Para ello, se utiliza el argumento habillage en la función `fviz_famd_ind()`.\n\n```{r}\n#| label: varCat en planoFactorial - R\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_mfa_ind(res.famd, \n             habillage = \"Churn\", # color by groups \n             palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n             addEllipses = TRUE, ellipse.type = \"confidence\", \n             repel = TRUE # Avoid text overlapping\n             ) \n```\n\nSi lo que queremos es colorear los individuos usando múltiples variables categóricas al mismo tiempo, se deberá de utilizar la función `fviz_ellipses()` del paquete `factoextra` de la siguiente forma: \n\n\n```{r}\n#| label: multiples varCat en planoFactorial - R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_ellipses(res.famd, c(\"Churn\", \"Gender\"), repel = TRUE)\n```\n\nTambién se puede identificar que variables categóricas queremos representar con el id de las variables: \n\n```{r}\n#| label: multiples varCat en planoFactorial por id - R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_ellipses(res.famd, 1:2, geom = \"point\")\n```\n","srcMarkdownNoYaml":"\n\n# Introducción \n\nEl Análisis Factorial de Datos Mixtos (FAMD) es una potente técnica estadística que se utiliza para analizar conjuntos de datos que contienen variables numéricas y categóricas. Amplía el análisis factorial tradicional para gestionar tipos de datos mixtos, proporcionando una comprensión integral de la estructura subyacente de conjuntos de datos complejos. \n\n```{mermaid}\nflowchart TD\n    cat?(¿BBDD Categorica?) --> |\"✅\"| num_too?(¿Contiene numéricas?)\n    num_too? --> |\"✅\"| FAMD\n    num_too? --> |\"❌\"| multiple_cat?(¿Más de dos columnas?)\n    multiple_cat? --> |\"✅\"| MCA\n    multiple_cat? --> |\"❌\"| CA\n    cat? --> |\"❌\"| groups?(¿Columnas agrupadas?)\n    groups? --> |\"✅\"| MFA\n    groups? --> |\"❌\"| shapes?(Analysing shapes?)\n    shapes? --> |\"✅\"| GPA\n    shapes? --> |\"❌\"| PCA\n```\n\nPara poder realizar los métodos, necesitaremos importar las siguientes librerias: \n\n:::: panel-tabset\n\n## R\n\n```{r}\n#| label: cargar-librerias-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## Import libraries\nlibrary(FactoMineR)\nlibrary(factoextra)\n```\n\n## Python\n\n```{python}\n#| label: cargar-librerias-python\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nimport prince\nfrom light_famd import FAMD\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n::::\n\n# Planteamiento del problema\n\nDescripció de la columna:\n\n-   **Gender:** El gènere del client: Home (1), Femení (0).\n\n-   **SeniorCitizen:** Indica si el client té 65 anys o més: No (0), Sí (1).\n\n-   **Partner:** El contracte de servei és revenut pel soci: No (0), Sí (1).\n\n-   **Dependents:** Indica si el client viu amb algun dependent: No (0), Sí (1).\n\n-   **Tenure:** Indica l'import total de mesos que el client ha estat amb l'empresa.\n\n-   **PhoneService:** Indica si el client es subscriu al servei de telèfon de casa amb l'empresa: No (0), Sí (1).\n\n-   **MultipleLines:** Indica si el client es subscriu a diverses línies telefòniques amb l'empresa: No (0), Sí (1).\n\n-   **InternetService:** Indica si el client es subscriu al servei d'Internet amb l'empresa: No (0), DSL (1), Fibra òptica (2).\n\n-   **OnlineSecurity:** Indica si el client es subscriu a un servei addicional de seguretat en línia prestat per l'empresa: No (0), Sí (1), NA (2).\n\n-   **OnlineBackup:** Indica si el client es subscriu a un servei de backup online addicional proporcionat per l'empresa: No (0), Sí (1), NA (2).\n\n-   **DeviceProtection:** Indica si el client es subscriu a un pla addicional de protecció de dispositius per als seus equips d'Internet proporcionats per l'empresa: No (0), Sí (1), NA (2).\n\n-   **TechSupport:** Indica si el client es subscriu a un pla de suport tècnic addicional de l'empresa amb temps d'espera reduïts: No (0), Sí (1), NA (2).\n\n-   **StreamingTV:** Indica si el client utilitza el seu servei d'Internet per transmetre la programació de televisió d'un proveïdor de tercers: No (0), Sí (1), NA (2). L'empresa no cobra cap càrrec addicional per aquest servei.\n\n-   **StreamingMovies:** Indica si el client utilitza el seu servei d'Internet per transmetre pel·lícules d'un proveïdor de tercers: No (0), Sí (1), NA (2). L'empresa no cobra cap càrrec addicional per aquest servei.\n\n-   **Contract:** Indica el tipus de contracte actual del client: Mes a mes (0), Un any (1), Dos anys (2).\n\n-   **PaperlessBilling:** Indica si el client ha triat facturació sense paper: No (0), Sí (1).\n\n-   **PaymentMethod:** Indica com el client paga la seva factura: transferència bancària - automàtica (0), targeta de crèdit - automàtica (1), xec electrònic (2), xec per correu (3).\n\n-   **MonthlyCharges:** Indica el total de la quota mensual actual del client per a tots els seus serveis de l'empresa.\n\n-   **TotalCharges:** Indica el total de càrrecs del client.\n\n-   **Churn:** Indica si el client es talla o no: No (0), Sí (1).\n\n:::: panel-tabset\n\n## R\n\n```{r}\n#| label: importacion-datos-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## Import data\ndf <- read.csv('https://raw.githubusercontent.com/nchelaru/data-prep/refs/heads/master/telco_cleaned_renamed.csv')\n\n## Preview data\nhead(df)\n```\n\nVisualizamos la estructura de los datos: \n\n```{r}\n#| label: estructura-datos-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nstr(df)\n```\n\n## Python\n\n```{python}\n#| label: importacion-datos-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\npydf = pd.read_csv('https://raw.githubusercontent.com/nchelaru/data-prep/refs/heads/master/telco_cleaned_renamed.csv')\n```\n\nVisualizamos la estructura de los datos: \n\n```{python}\n#| label: estructura-datos-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\npydf.info()\n```\n\n:::: \n\nLos datos contienen 20 columnas divididas en: \n  - **Numéricas**: `Tenure`, `MonthlyCharges` y `TotalCharges`\n  - **Categóricas**: `Gender`, `SeniorCitizen`, `Partner`, `Dependents`, `PhoneService`, `MultipleLines`, `InternetService`, `OnlineSecurity`, `OnlineBackup`, `DeviceProtection`, `TechSupport`, `StreamingTV`, `StreamingMovies`, `Contract`, `PaperlessBilling`, `PaymentMethod` y `Churn` (variable respuesta)\n\n::: {.callout-tip title=\"Consejo\"}\nEl objetivo de este estudio es poder estudiar las relaciones y asociaciones que existen en los clientes de la empresa Telecom.\n:::\n\n## Entrenamiento\n\n:::: panel-tabset\n\n## R\n\nLa función `FAMD()` del paquete `FactoMineR`se puede utilizar para calcular los planos factoriales. La descripción de la función es la siguiente: \n\n```{r}\n#| label: explicación-funcion-R\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nFAMD (base, ncp = 5, sup.var = NULL, ind.sup = NULL, graph = TRUE)\n```\n\n- `base`: Un `data.frame` con n filas (individuos) y p columnas (variables).\n\n- `ncp`: El número de dimensiones que se mantienen en los resultados *(por defecto 5)*\n\n- `sup.var`: Un vector que indica los índices de las variables suplementarias.\n\n- `ind.sup`: Un vector que indica los índices de los individuos suplementarios.\n\n- `graph`: Un valor lógico. Si es `VERDADERO`, se muestra un gráfico.\n\nA continuación, vamos a calcular el FAMD de la siguiente manera: \n\n```{r}\n#| label: calculo-FAMD\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## FAMD\nres.famd <- FAMD(df, sup.var = 20, graph = FALSE, ncp = 25)\n```\n\nLa salida que obtenemos con la función `FAMD()` es una lista que incluye: \n\n```{r}\n#| label: lista-valores-FAMD\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nprint(res.famd)\n```\n\n## Python \n\nLa función `prince.FAMD()` del paquete `prince`se puede utilizar para calcular los planos factoriales. La descripción de la función es la siguiente: \n\n```{python}\n#| label: explicación-funcion-Py\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nfamd = prince.FAMD(n_components = 2, n_iter = 3, copy = True, check_input = True,\n    random_state = 42, engine = \"sklearn\", handle_unknown = \"error\")\n```\n\n- `n_components`: El número de dimensiones que se mantienen en los resultados *(por defecto 2)*\n\n- `n_iter`: El número de iteraciones de las cuales ha de realizar el FAMD *(por defecto 3)*\n\n- `copy`: Indica si queremos realizar una copia o por el contrario de la base de datos\n\n- `check_input`: Valida las variables de entrada\n\n- `random_state`: Asigna una semilla para los cálculos\n\nA continuación, vamos a calcular el FAMD de la siguiente manera: \n\n```{python}\n#| label: calculo-FAMD-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfamd = prince.FAMD(n_components=10, random_state=42)\nfamdPy = famd.fit(pydf)\n```\n\n:::: \n\n\n## Visualización e interpretación\n\nUtilizaremos las siguientes funciones del paquete `factoextra` para poder obtener las interpretaciones correspondientes: \n\n- `get_eigenvalue(res.famd)`: Extraer los valores propios/varianzas retenidas por cada dimensión (eje).\n\n- `fviz_eig(res.famd)`: Visualizar los valores propios/varianzas. \n\n- `get_famd_ind(res.famd)`: Extraer los resultados para individuos. \n\n- `get_famd_var(res.famd)`: Extraer los resultados de las variables cuantitativas y cualitativas.\n\n- `fviz_famd_ind(res.famd)` y `fviz_famd_var(res.famd)`: Visualizar los resultados para individuos y variables, respectivamente. \n\n::: {.callout-tip title=\"Aviso\"}\nRecordad que, para la interpretación de FAMD se ha de realizar lo mismo hecho en clases anteriores en métodos como el ACP, ACS y ACM. \n:::\n\n## Eigenvalues y Eigenvectors\n\n:::: panel-tabset\n\n## R\n\nLa proporción de varianzas retenidas (*eigenvalues*) por las diferentes dimensiones (ejes) se puede extraer utilizando la función `get_eigenvalue()` del paquete `factoextra` de la siguiente manera:\n\n```{r}\n#| label: eigenvalues-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\neig.val <- get_eigenvalue(res.famd)\nhead(eig.val)\n```\n\nLa función `fviz_eig()` o `fviz_screeplot()` del paquete `factoextra` se puede utilizar para dibujar el diagrama de codo (los porcentajes de inercia explicados por cada dimensión de FAMD):\n\n```{r}\n#| label: screePlot-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_screeplot(res.famd)\n```\n\n## Python \n\nLa proporción de varianzas retenidas (*eigenvalues*) por las diferentes dimensiones (ejes) se puede extraer utilizando el método `.eigenvalues_` de la siguiente manera:\n\n```{python}\n#| label: eigenvalues-Python\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\neigenvalues = famd.eigenvalues_\nfamd.eigenvalues_summary\n```\n\nLa función `fviz_eig()` o `fviz_screeplot()` del paquete `factoextra` se puede utilizar para dibujar el diagrama de codo (los porcentajes de inercia explicados por cada dimensión de FAMD):\n\n```{python}\n#| label: screePlot-python\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Hacer el scree plot\nplt.figure(figsize=(8, 5))\nplt.plot(range(1, len(eigenvalues) + 1), eigenvalues, marker='o')\nplt.title('Scree Plot - FAMD')\nplt.xlabel('Componentes')\nplt.ylabel('Valor propio (Eigenvalue)')\nplt.xticks(range(1, len(eigenvalues) + 1))\nplt.grid(True)\nplt.show()\n```\n\n:::: \n\n\n## Variables\n\n### Todas las variables\n\n:::: panel-tabset\n\n## R\n\nLa función `get_mfa_var()` del paquete `factoextra` se utiliza para extraer los resultados de las variables. Por defecto, esta función devuelve una lista con las coordenadas, el coseno$^2$ y la contribución de todas las variables: \n\n```{r}\n#| label: infoVariables-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(var <- get_famd_var(res.famd))\n```\n\n#### Coordenadas de las componentes\n\nSe puede acceder a los diferentes componentes de la siguiente manera: \n\n```{r}\n#| label: componentesVariables-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nhead(var$coord)\n```\n\n#### Coseno$^2$\n\nA continuación se muestra el coseno$^2$ que representa la calidad de la representación en el mapa factorial. \n\n```{r}\n#| label: coseno2-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nhead(var$cos2)\n```\n\n#### Contribuciones\n\nEn el siguiente apartado, podemos visualizar la contribución de cada una de las varaibles a las dimensiones. \n\n```{r}\n#| label: contribuciones-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nhead(var$contrib)\n```\n\nLa siguiente figura muestra la correlación entre las variables, tanto cuantitativas como cualitativas, y las dimensiones principales, así como la contribución de las variables a las dimensiones 1 y 2. Se utilizan las siguientes funciones del paquete `factoextra`:\n\n- `fviz_famd_var()`: para representar gráficamente variables cuantitativas y cualitativas\n\n- `fviz_contrib()`: para visualizar la contribución de las variables a las dimensiones principales\n\n```{r}\n#| label: graficoVariables-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, repel = TRUE)\n```\n\nA continuación vamos a visualizar las contribuciones de las variables en la primera dimensión. \n\n```{r}\n#| label: contribuciones1aDim-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Contribution to the first dimension\nfviz_contrib(res.famd, \"var\", axes = 1)\n```\n\nSeguidamente podemos ver las contribuciones de las variables en la 2a dimensión. \n\n```{r}\n#| label: contribuciones2aDim-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Contribution to the second dimension\nfviz_contrib(res.famd, \"var\", axes = 2)\n```\n\nLa línea discontinua roja en el gráfico anterior indica el valor promedio esperado, si las contribuciones fueran uniformes. \n\nDe los gráficos anteriormente expuestos se puede observar que: \n\n- Las variables más contribuyentes a la primera dimensión són: \n\n  - ...\n  \n- Las variables que más contribuyen a la segunda dimensión son: \n\n  - ...\n  \n## Python \n\n#### Coordenadas de las componentes\n\nSe puede acceder a los diferentes componentes de la siguiente manera: \n\n```{python}\n#| label: componentesVariables-Py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n## famd.row_coordinates(pydf)  ## Individuos\nfamd.column_coordinates_\n```\n\n#### Coseno$^2$\n\nA continuación se muestra el coseno$^2$ que representa la calidad de la representación en el mapa factorial. \n\n```{python}\n#| label: coseno2-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfamd.column_cosine_similarities_\n\n```\n\n#### Contribuciones\n\nEn el siguiente apartado, podemos visualizar la contribución de cada una de las varaibles a las dimensiones. \n\n```{python}\n#| label: contribuciones-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(famd.column_contributions_)\n```\n\nLa siguiente figura muestra la correlación entre las variables, tanto cuantitativas como cualitativas, y las dimensiones principales, así como la contribución de las variables a las dimensiones 1 y 2. \n\n```{python}\n#| label: graficoVariables-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Coordenadas de las variables (componentes 1 y 2)\ncoords = famd.column_coordinates_\n\n# Elegimos los dos primeros componentes\nx = coords[0]\ny = coords[1]\n\nplt.figure(figsize=(8, 8))\nplt.axhline(0, color='gray', lw=1)\nplt.axvline(0, color='gray', lw=1)\n\n# Dibujar solo puntos con etiquetas\nplt.scatter(x, y, color='white')\n\nfor i in range(len(coords)):\n    plt.text(x[i], y[i], coords.index[i], fontsize=9, color=\"red\" , ha='center', va='center')\n\nplt.title(\"Variables en el plano factorial (FAMD)\")\nplt.xlabel(\"Dim 1\")\nplt.ylabel(\"Dim 2\")\nplt.grid(True)\nplt.axis('equal')\nplt.show()\n```\n\nA continuación vamos a visualizar las contribuciones de las variables en la primera dimensión. \n\n```{python}\n#| label: contribuciones1aDim-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Obtener coordenadas de las variables\ncoords = famd.column_coordinates_\n\n# Calcular la contribución (cos²) al eje 1\n# Es la coordenada al cuadrado de cada variable en ese eje\ncontrib = (coords[0] ** 2)\n\n# Normalizar en porcentaje\ncontrib_percent = 100 * contrib / contrib.sum()\n\n# Ordenar de mayor a menor\ncontrib_percent = contrib_percent.sort_values(ascending=False)\n\n# Calcular la media\nmean_contrib = 100 / len(contrib_percent)\n\n# Graficar\nplt.figure(figsize=(10, 6))\nsns.barplot(x=contrib_percent.values, y=contrib_percent.index, palette=\"Blues_d\")\nplt.axvline(mean_contrib, color='red', linestyle='--', label=f'Media = {mean_contrib:.2f}%')\nplt.xlabel('Contribución al componente 1 (%)')\nplt.title('Contribución de variables al eje 1 (FAMD)')\nplt.legend()\nplt.tight_layout()\nplt.show()\n```\n\nSeguidamente podemos ver las contribuciones de las variables en la 2a dimensión. \n\n```{python}\n#| label: contribuciones2aDim-py\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n# Obtener coordenadas de las variables\ncoords = famd.column_coordinates_\n\n# Calcular la contribución (cos²) al eje 1\n# Es la coordenada al cuadrado de cada variable en ese eje\ncontrib = (coords[1] ** 2)\n\n# Normalizar en porcentaje\ncontrib_percent = 100 * contrib / contrib.sum()\n\n# Ordenar de mayor a menor\ncontrib_percent = contrib_percent.sort_values(ascending=False)\n\n# Calcular la media\nmean_contrib = 100 / len(contrib_percent)\n\n# Graficar\nplt.figure(figsize=(10, 6))\nsns.barplot(x=contrib_percent.values, y=contrib_percent.index, palette=\"Blues_d\")\nplt.axvline(mean_contrib, color='red', linestyle='--', label=f'Media = {mean_contrib:.2f}%')\nplt.xlabel('Contribución al componente 2 (%)')\nplt.title('Contribución de variables al eje 2 (FAMD)')\nplt.legend()\nplt.tight_layout()\nplt.show()\n```\n\nLa línea discontinua roja en el gráfico anterior indica el valor promedio esperado, si las contribuciones fueran uniformes. \n\nDe los gráficos anteriormente expuestos se puede observar que: \n\n- Las variables más contribuyentes a la primera dimensión són: \n\n  - ...\n  \n- Las variables que más contribuyen a la segunda dimensión son: \n\n  - ...\n\n::::\n\n### Variables cuantitativas\n\nPara extraer los resultados de las variables cuantitativas, se debe realizar el siguiente proceso: \n\n:::: panel-tabset\n\n## R\n\n```{r}\n#| label: varsCuantitativas-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(quanti.var <- get_famd_var(res.famd, \"quanti.var\"))\n```\n\nA continuación vamos a visualizar el círculo unitario tal y como extraiamos de la aplicación del **ACP**. Para no superponer las etiquetas de las variables numéricas, vamos a utilizar el parámetro `repel = TRUE`. \n\n\n```{r}\n#| label: circuloUnitario-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quanti.var\", repel = TRUE,\n              col.var = \"black\")\n```\n\nEl gráfico de variables (círculo unitario) muestra la relación entre las variables, la calidad de su representación, así como la correlación entre las variables y las dimensiones.\n\nLas variables cuantitativas más contribuyentes se pueden resaltar en el diagrama de dispersión mediante el argumento `col.var = \"contrib\"`. Esto produce un degradado de colores, que se puede personalizar mediante el argumento `gradient.cols`.\n\n```{r}\n#| label: circulo Unitario Contribuciones-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quanti.var\", col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\nDel mismo modo, puede resaltar variables cuantitativas utilizando sus valores cos$^2$ que representan la calidad de la representación en el mapa factorial. Si una variable está bien representada por dos dimensiones, la suma del cos$^2$ se aproxima a uno. Para algunos de los elementos, es posible que se requieran más de 2 dimensiones para representar perfectamente los datos.\n\n```{r}\n#| label: circulo unitario calidad-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quanti.var\", col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\n## Python \n\n\n\n::::\n\n### Variables cualitativas \n\nAl igual que las variables cuantitativas, los resultados de las variables cualitativas se pueden extraer de la siguiente manera:\n\n```{r}\n#| label: varsCualitativas-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(quali.var <- get_famd_var(res.famd, \"quali.var\"))\n```\n\nPara visualizar las variables cualitativas, se ha de escribir el siguiente código: \n\n```{r}\n#| label: varsCualitativasContribucion-R\n\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_var(res.famd, \"quali.var\", col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n```\n\nLa gráfica anterior muestra las categorías de las variables categóricas. \n\n## Individuos\n\nSi se desean hacer gráficos individuales se realiza lo siguiente.\n\n```{r}\n#| label: individuos-R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\n(ind <- get_famd_ind(res.famd))\n```\n\nPara representar gráficamente a los individuos, utilizaremos la función `fviz_mfa_ind()` del paquete `factoextra`. Por defecto, los individuos están coloreados en azul. Sin embargo, al igual que las variables, también es posible colorear a los individuos por sus valores de cos2 y contribución:\n\n```{r}\n#| label: individuos-coseno2-R\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_famd_ind(res.famd, col.ind = \"cos2\", \n             gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\nLas categorias de las variables cualitativas se muestran en negro. Para poder eliminar dichas modalidades, utilizamos el parámetro `invisible = \"quali.var\"`. \n\nLos individuos con perfiles similares se encuentran cerca en el mapa factorial.\n\nEs posible colorear a los individuos utilizando cualquiera de las variables cualitativas en la tabla de datos inicial. Para ello, se utiliza el argumento habillage en la función `fviz_famd_ind()`.\n\n```{r}\n#| label: varCat en planoFactorial - R\n#| echo: true\n#| eval: false\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_mfa_ind(res.famd, \n             habillage = \"Churn\", # color by groups \n             palette = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n             addEllipses = TRUE, ellipse.type = \"confidence\", \n             repel = TRUE # Avoid text overlapping\n             ) \n```\n\nSi lo que queremos es colorear los individuos usando múltiples variables categóricas al mismo tiempo, se deberá de utilizar la función `fviz_ellipses()` del paquete `factoextra` de la siguiente forma: \n\n\n```{r}\n#| label: multiples varCat en planoFactorial - R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_ellipses(res.famd, c(\"Churn\", \"Gender\"), repel = TRUE)\n```\n\nTambién se puede identificar que variables categóricas queremos representar con el id de las variables: \n\n```{r}\n#| label: multiples varCat en planoFactorial por id - R\n#| echo: true\n#| eval: true\n#| warning: false\n#| message: false\n#| error: false\n\nfviz_ellipses(res.famd, 1:2, geom = \"point\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"number-sections":true,"output-file":"FAMD.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.37","theme":{"light":"cerulean","dark":"darkly"},"title":"Anàlisis factorial per a Dades mixtes (FAMD)","author":"Dante Conti, Sergi Ramirez, (c) IDEAI","date":"`r Sys.Date()`","date-modified":"`r Sys.Date()`","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}