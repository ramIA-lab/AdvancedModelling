{
  "hash": "672fcd370dfa2afe99f2dd8b9b0830a1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Anàlisis de Componentes Principales (ACP)\"\nauthor: Dante Conti, Sergi Ramirez, (c) IDEAI\ndate: \"2025-04-03\"\ndate-modified: \"2025-04-03\"\ntoc: true\n# language: es\nnumber-sections: true\nformat: \n  html: \n    theme:\n      light: cerulean\n      dark: darkly\neditor: visual\n#execute: \n#  freeze: auto\n---\n\n\n\n# Introducció\n\nEn moltes ocasions, per estudiar un fenomen, hi ha un gran nombre de variables disponibles, algunes de les quals estan correlacionades entre si, i l'anàlisi no és fàcil de realitzar. En aquestes situacions, és convenient aplicar un mètode, com el **mètode de components principals**, que permeti reduir el nombre de variables sense pèrdua substancial d'informació, i assegurar que aquestes noves variables no estiguin correlacionades, evitant així la informació redundant.\n\n::: panel-tabset\n\n## R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist.of.packages = c(\"dplyr\", \"reshape2\", \"tidyr\", \"ggplot2\", \"stats\", \n                     \"cluster\", \"factoextra\", \"colorspace\", \"patchwork\", \"dendextend\",\n                     \"tidyverse\", \"ggpubr\", \"NbClust\", \"HDclassif\", \"clValid\", \n                     \"mclust\") \n\nnew.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,\"Package\"])]\nif(length(new.packages) > 0) {\n  install.packages(new.packages)\n}\nll <- lapply(list.of.packages, require, character.only = T)\nrm(list.of.packages, new.packages)\n```\n:::\n\n\n\n## Python\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Tratamiento de datos\n# ==============================================================================\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\n\n# Gráficos\n# ==============================================================================\nimport matplotlib.pyplot as plt\nimport matplotlib.font_manager\nfrom matplotlib import style\nstyle.use('ggplot') or plt.style.use('ggplot')\n\n# Preprocesado y modelado\n# ==============================================================================\nfrom sklearn.decomposition import PCA\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.preprocessing import scale\n\n# Configuración warnings\n# ==============================================================================\nimport warnings\nwarnings.filterwarnings('ignore')\n```\n:::\n\n\n\n:::\n\n# Definició del problema\n\nEn aquest cas d'estudi es reduirà el nombre de variables economicofinanceres que descriuen un grup d'empreses dedicades al transport per carretera, conservant la major quantitat d'informació possible. El punt de partida és la informació economicofinancera per a l'any 2016 de 459 empreses. Per a cada empresa, les dades estan disponibles dins de les següents variables:\n\n* **Palanca financiera**: palanca (%)\n* **Capital**: capital social (milers d'euros)\n* **Guanys abans de l'impost d'interès Depreciació i amortització**: ebitda.sales (%)\n* **Empleats**: mà d'obra de l'empresa (persones)\n* **fons**: fons propis (milers d'euros)\n* **Renda**: renda operativa (milers d'euros)\n* **Reco**: rendibilitat econòmica (%)\n* **Rfin**: retorn financer (%)\n* **Reventes**: resultat de l'any en vendes (%)\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n# Descriptiva (EDA)\n\n::: panel-tabset\n\n## R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(X = db, MARGIN = 2, FUN = var)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    leverage      capital ebitda.sales    employees        funds       income \n4.102338e+06 5.105017e+05 1.595078e+02 2.864593e+03 1.897116e+07 3.302072e+08 \n        reco         rfin    res.sales \n1.661846e+02 1.638810e+05 7.444749e+01 \n```\n\n\n:::\n\n```{.r .cell-code}\napply(X = db, MARGIN = 2, FUN = sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    leverage      capital ebitda.sales    employees        funds       income \n 2025.422983   714.494043    12.629640    53.521893  4355.589136 18171.602987 \n        reco         rfin    res.sales \n   12.891262   404.822214     8.628296 \n```\n\n\n:::\n:::\n\n\n\n## Python \n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nprint('----------------------')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n----------------------\n```\n\n\n:::\n\n```{.python .cell-code}\nprint('Media de cada variable')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMedia de cada variable\n```\n\n\n:::\n\n```{.python .cell-code}\nprint('----------------------')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n----------------------\n```\n\n\n:::\n\n```{.python .cell-code}\npydb.mean(axis=0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nleverage         194.964486\ncapital          142.250468\nebitda.sales      10.339530\nemployees         17.135076\nfunds            792.147930\nincome          3512.869621\nreco               4.464370\nrfin              33.925980\nres.sales          2.417563\ndtype: float64\n```\n\n\n:::\n\n```{.python .cell-code}\nprint('-------------------------')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n-------------------------\n```\n\n\n:::\n\n```{.python .cell-code}\nprint('Varianza de cada variable')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nVarianza de cada variable\n```\n\n\n:::\n\n```{.python .cell-code}\nprint('-------------------------')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n-------------------------\n```\n\n\n:::\n\n```{.python .cell-code}\npydb.var(axis=0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nleverage        4.102338e+06\ncapital         5.105017e+05\nebitda.sales    1.595078e+02\nemployees       2.864593e+03\nfunds           1.897116e+07\nincome          3.302072e+08\nreco            1.661846e+02\nrfin            1.638810e+05\nres.sales       7.444749e+01\ndtype: float64\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\nFixeu-vos en l'alta variància entre les característiques, de manera que a mesura que es va estudiar, hem d'escalar les nostres dades per a PCA.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(Correlations <- cor(db))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 leverage      capital ebitda.sales    employees        funds\nleverage      1.000000000 -0.004810751  0.039056257  0.005823987 -0.008740051\ncapital      -0.004810751  1.000000000 -0.020858314  0.555979779  0.664155850\nebitda.sales  0.039056257 -0.020858314  1.000000000 -0.017033459  0.009833573\nemployees     0.005823987  0.555979779 -0.017033459  1.000000000  0.470561410\nfunds        -0.008740051  0.664155850  0.009833573  0.470561410  1.000000000\nincome       -0.001557898  0.708616985 -0.017765649  0.590286822  0.968580877\nreco          0.042578483  0.026927060  0.607137189  0.031277344  0.088665116\nrfin         -0.883229777 -0.005619264 -0.024083476 -0.005369538 -0.005177150\nres.sales     0.011504424  0.003212377  0.833051303  0.012390814  0.045899956\n                   income        reco         rfin    res.sales\nleverage     -0.001557898  0.04257848 -0.883229777  0.011504424\ncapital       0.708616985  0.02692706 -0.005619264  0.003212377\nebitda.sales -0.017765649  0.60713719 -0.024083476  0.833051303\nemployees     0.590286822  0.03127734 -0.005369538  0.012390814\nfunds         0.968580877  0.08866512 -0.005177150  0.045899956\nincome        1.000000000  0.08213367 -0.002498589  0.032885285\nreco          0.082133672  1.00000000 -0.054264271  0.778311589\nrfin         -0.002498589 -0.05426427  1.000000000 -0.010521216\nres.sales     0.032885285  0.77831159 -0.010521216  1.000000000\n```\n\n\n:::\n\n```{.r .cell-code}\ncorrplot::corrplot(Correlations) \n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/grafic-correlacions-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncorrplot::corrplot(Correlations, method = \"number\", number.cex = 0.75) \n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/grafic-correlacions-2.png){width=672}\n:::\n:::\n\n\n\n# Extracció de les components principals (PCA)\n\n## Funcions clàssiques\n\n:::panel-tabset\n\n## R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(pca1 <- princomp(db, cor = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nprincomp(x = db, cor = TRUE)\n\nStandard deviations:\n   Comp.1    Comp.2    Comp.3    Comp.4    Comp.5    Comp.6    Comp.7    Comp.8 \n1.7377611 1.5748797 1.3695262 0.7767213 0.6328808 0.6031328 0.3478603 0.3400504 \n   Comp.9 \n0.1417537 \n\n 9  variables and  459 observations.\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(pca1) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sdev\"     \"loadings\" \"center\"   \"scale\"    \"n.obs\"    \"scores\"   \"call\"    \n```\n\n\n:::\n:::\n\n\n\nPosant `cor = TRUE` estem escalant la db. \n\nEn el següent codi podem veure una altra forma de fer-ho: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(pca2 <- prcomp(db, scale = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nStandard deviations (1, .., p=9):\n[1] 1.7377611 1.5748797 1.3695262 0.7767213 0.6328808 0.6031328 0.3478603\n[8] 0.3400504 0.1417537\n\nRotation (n x k) = (9 x 9):\n                     PC1         PC2          PC3         PC4         PC5\nleverage      0.00655167 -0.08475443 -0.701693265 -0.00451166 -0.03212559\ncapital       0.47912293  0.09232221 -0.004862422 -0.08111504 -0.43770776\nebitda.sales  0.06207123 -0.56245352  0.067324955 -0.05288579 -0.56734582\nemployees     0.41532340  0.07629194 -0.009402874 -0.83986630  0.19109492\nfunds         0.52358761  0.06373829  0.003191079  0.45460454  0.07067235\nincome        0.54613349  0.07992855 -0.001052963  0.27499508  0.11261109\nreco          0.11310163 -0.53804853  0.047726376  0.04542996  0.65266209\nrfin         -0.01158476  0.08269831  0.702002522 -0.01260367 -0.01361748\nres.sales     0.09338080 -0.59609773  0.088798740 -0.02678373 -0.07177909\n                     PC6          PC7         PC8          PC9\nleverage      0.02978363 -0.236982842  0.66401824  0.037145102\ncapital      -0.75043525 -0.004197640  0.01119148  0.020748907\nebitda.sales  0.30502552 -0.462248076 -0.20543903 -0.040783841\nemployees     0.25683680 -0.007966801 -0.02155086  0.114942925\nfunds         0.26946841 -0.008540688 -0.03921824  0.660226599\nincome        0.24330824  0.011707222  0.04560329 -0.738667287\nreco         -0.37919389 -0.339318757 -0.09188864  0.005792861\nrfin          0.01975233 -0.262989264  0.65503345  0.035392438\nres.sales     0.03104641  0.738629937  0.27414379  0.022356680\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(pca2) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sdev\"     \"rotation\" \"center\"   \"scale\"    \"x\"       \n```\n\n\n:::\n:::\n\n\n\nAquí, heu de posar `scale = TRUE` per tal d'estandarditzar la vostra base de dades.\n\nCom podreu comprovar, els dos cosos son iguals.\n\n## Python \n\nLa clase `sklearn.decomposition.PCA` incorpora las principales funcionalidades que se necesitan a la hora de trabajar con modelos PCA. El argumento `n_components` determina el número de componentes calculados. Si se indica `None`, se calculan todas las posibles (min(filas, columnas) - 1).\n\nPor defecto, `PCA()` centra los valores pero no los escala. Esto es importante ya que, si las variables tienen distinta dispersión, como en este caso, es necesario escalarlas. Una forma de hacerlo es combinar un `StandardScaler()` y un `PCA()` dentro de un pipeline. Para más información sobre el uso de *pipelines* consultar **Pipeline** y **ColumnTransformer**.\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Entrenamiento modelo PCA con escalado de los datos\n# ==============================================================================\npca_pipe = make_pipeline(StandardScaler(), PCA())\npca_pipe.fit(pydb)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<style>#sk-container-id-1 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: black;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-1 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-1 pre {\n  padding: 0;\n}\n\n#sk-container-id-1 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-1 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-1 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-1 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-1 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-1 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-1 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-1 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-1 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-1 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-1 label.sk-toggleable__label {\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-1 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n#sk-container-id-1 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-1 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-1 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-1 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-1 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-1 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 1ex;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-1 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-1 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()), (&#x27;pca&#x27;, PCA())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;Pipeline<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.pipeline.Pipeline.html\">?<span>Documentation for Pipeline</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;standardscaler&#x27;, StandardScaler()), (&#x27;pca&#x27;, PCA())])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;StandardScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.StandardScaler.html\">?<span>Documentation for StandardScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>StandardScaler()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;PCA<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.decomposition.PCA.html\">?<span>Documentation for PCA</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>PCA()</pre></div> </div></div></div></div></div></div>\n```\n\n:::\n\n```{.python .cell-code}\n\n# Se extrae el modelo entrenado del pipeline\nmodelo_pca = pca_pipe.named_steps['pca']\n```\n:::\n\n\n:::\n\n## Importància de les components \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(pca1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImportance of components:\n                          Comp.1    Comp.2    Comp.3     Comp.4     Comp.5\nStandard deviation     1.7377611 1.5748797 1.3695262 0.77672134 0.63288079\nProportion of Variance 0.3355348 0.2755829 0.2084002 0.06703289 0.04450423\nCumulative Proportion  0.3355348 0.6111177 0.8195179 0.88655083 0.93105506\n                          Comp.6    Comp.7     Comp.8      Comp.9\nStandard deviation     0.6031328 0.3478603 0.34005041 0.141753692\nProportion of Variance 0.0404188 0.0134452 0.01284825 0.002232679\nCumulative Proportion  0.9714739 0.9849191 0.99776732 1.000000000\n```\n\n\n:::\n:::\n\n\n\nComponents as a linear combination of the variables\n\n::: panel-tabset\n\n## R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npca1$loadings[,1:9]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  Comp.1      Comp.2       Comp.3      Comp.4      Comp.5\nleverage      0.00655167  0.08475443  0.701693265  0.00451166  0.03212559\ncapital       0.47912293 -0.09232221  0.004862422  0.08111504  0.43770776\nebitda.sales  0.06207123  0.56245352 -0.067324955  0.05288579  0.56734582\nemployees     0.41532340 -0.07629194  0.009402874  0.83986630 -0.19109492\nfunds         0.52358761 -0.06373829 -0.003191079 -0.45460454 -0.07067235\nincome        0.54613349 -0.07992855  0.001052963 -0.27499508 -0.11261109\nreco          0.11310163  0.53804853 -0.047726376 -0.04542996 -0.65266209\nrfin         -0.01158476 -0.08269831 -0.702002522  0.01260367  0.01361748\nres.sales     0.09338080  0.59609773 -0.088798740  0.02678373  0.07177909\n                  Comp.6       Comp.7      Comp.8       Comp.9\nleverage      0.02978363  0.236982842  0.66401824  0.037145102\ncapital      -0.75043525  0.004197640  0.01119148  0.020748907\nebitda.sales  0.30502552  0.462248076 -0.20543903 -0.040783841\nemployees     0.25683680  0.007966801 -0.02155086  0.114942925\nfunds         0.26946841  0.008540688 -0.03921824  0.660226599\nincome        0.24330824 -0.011707222  0.04560329 -0.738667287\nreco         -0.37919389  0.339318757 -0.09188864  0.005792861\nrfin          0.01975233  0.262989264  0.65503345  0.035392438\nres.sales     0.03104641 -0.738629937  0.27414379  0.022356680\n```\n\n\n:::\n:::\n\n\n\n## Python\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Se combierte el array a dataframe para añadir nombres a los ejes.\npd.DataFrame(data = modelo_pca.components_, columns = pydb.columns, index = ['PC1', 'PC2', 'PC3', 'PC4', 'PC5', 'PC6', 'PC7', 'PC8', 'PC9'])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     leverage   capital  ebitda.sales  ...      reco      rfin  res.sales\nPC1  0.006552  0.479123      0.062071  ...  0.113102 -0.011585   0.093381\nPC2  0.084754 -0.092322      0.562454  ...  0.538049 -0.082698   0.596098\nPC3 -0.701693 -0.004862      0.067325  ...  0.047726  0.702003   0.088799\nPC4  0.004512  0.081115      0.052886  ... -0.045430  0.012604   0.026784\nPC5 -0.032126 -0.437708     -0.567346  ...  0.652662 -0.013617  -0.071779\nPC6 -0.029784  0.750435     -0.305026  ...  0.379194 -0.019752  -0.031046\nPC7 -0.236983 -0.004198     -0.462248  ... -0.339319 -0.262989   0.738630\nPC8  0.664018  0.011191     -0.205439  ... -0.091889  0.655033   0.274144\nPC9 -0.037145 -0.020749      0.040784  ... -0.005793 -0.035392  -0.022357\n\n[9 rows x 9 columns]\n```\n\n\n:::\n:::\n\n\n\nLa influencia de las variables en cada componente analizarse visualmente con un gráfico de tipo *heatmap.*\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# Heatmap componentes\n# ==============================================================================\nfig, ax = plt.subplots(nrows=1, ncols=1, figsize=(4, 2))\ncomponentes = modelo_pca.components_\nplt.imshow(componentes.T, cmap='viridis', aspect='auto')\nplt.yticks(range(len(pydb.columns)), pydb.columns)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n([<matplotlib.axis.YTick object at 0x000002C8115EEA50>, <matplotlib.axis.YTick object at 0x000002C8115EDEE0>, <matplotlib.axis.YTick object at 0x000002C8114B3F80>, <matplotlib.axis.YTick object at 0x000002C8115EE5D0>, <matplotlib.axis.YTick object at 0x000002C811643320>, <matplotlib.axis.YTick object at 0x000002C811642540>, <matplotlib.axis.YTick object at 0x000002C8116419A0>, <matplotlib.axis.YTick object at 0x000002C811643E60>, <matplotlib.axis.YTick object at 0x000002C811642F60>], [Text(0, 0, 'leverage'), Text(0, 1, 'capital'), Text(0, 2, 'ebitda.sales'), Text(0, 3, 'employees'), Text(0, 4, 'funds'), Text(0, 5, 'income'), Text(0, 6, 'reco'), Text(0, 7, 'rfin'), Text(0, 8, 'res.sales')])\n```\n\n\n:::\n\n```{.python .cell-code}\nplt.xticks(range(len(pydb.columns)), np.arange(modelo_pca.n_components_) + 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n([<matplotlib.axis.XTick object at 0x000002C8111B8950>, <matplotlib.axis.XTick object at 0x000002C8115EE8A0>, <matplotlib.axis.XTick object at 0x000002C8114B0740>, <matplotlib.axis.XTick object at 0x000002C81169DE80>, <matplotlib.axis.XTick object at 0x000002C81169EA20>, <matplotlib.axis.XTick object at 0x000002C81169DDC0>, <matplotlib.axis.XTick object at 0x000002C81169CBC0>, <matplotlib.axis.XTick object at 0x000002C81169F230>, <matplotlib.axis.XTick object at 0x000002C81169FB30>], [Text(0, 0, '1'), Text(1, 0, '2'), Text(2, 0, '3'), Text(3, 0, '4'), Text(4, 0, '5'), Text(5, 0, '6'), Text(6, 0, '7'), Text(7, 0, '8'), Text(8, 0, '9')])\n```\n\n\n:::\n\n```{.python .cell-code}\nplt.grid(False)\nplt.colorbar();\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/heatmap-loading-1.png){width=384}\n:::\n:::\n\n\n:::\n\n$Pc1 = Comp.1 = 0.0066 * leverage + 0.4791 * capital + 0.0621 * ebitda.sales + ... −0.0116 * rfin + 0.0934 * res.ventas$\n\nAnalizar con detalle el vector de loadings que forma cada componente puede ayudar a interpretar qué tipo de información recoge cada una de ellas. Por ejemplo, la primera componente es el resultado de la siguiente combinación lineal de las variables originales.\n\n**STOP** and analyze the linear combinations (PCi). Get information from loadings to see how important the variables are to define the PCs\n\nLet's move to FACTOMINER and FACTOEXTRA packages. \n\n# FactoMineR i FactoExtra\n\nThese packages use function PCA, PCA is the same as prcomp() function. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(FactoMineR)\nlibrary(factoextra)\nlibrary(corrplot)\n```\n:::\n\n\n\n\nThese functions include:\n\n* `get_eigenvalue(res.pca)`: Extract the eigenvalues/variances of principal components\n\n* `fviz_eig(res.pca)`: Visualize the eigenvalues\n\n* `get_pca_ind(res.pca)`, `get_pca_var(res.pca)`: Extract the results for individuals and variables, respectively.\n\n* `fviz_pca_ind(res.pca), `fviz_pca_var(res.pca)`: Visualize the results for individuals and variables, respectively.\n\n* `fviz_pca_biplot(res.pca)`: Make a biplot of individuals and variables.\n\n\nApliquem el PCA amb la base de dades. \n\n## Create a PCA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(dec.pca <- PCA(db, scale.unit = TRUE, ncp = Inf, graph = F))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n**Results for the Principal Component Analysis (PCA)**\nThe analysis was performed on 459 individuals, described by 9 variables\n*The results are available in the following objects:\n\n   name               description                          \n1  \"$eig\"             \"eigenvalues\"                        \n2  \"$var\"             \"results for the variables\"          \n3  \"$var$coord\"       \"coord. for the variables\"           \n4  \"$var$cor\"         \"correlations variables - dimensions\"\n5  \"$var$cos2\"        \"cos2 for the variables\"             \n6  \"$var$contrib\"     \"contributions of the variables\"     \n7  \"$ind\"             \"results for the individuals\"        \n8  \"$ind$coord\"       \"coord. for the individuals\"         \n9  \"$ind$cos2\"        \"cos2 for the individuals\"           \n10 \"$ind$contrib\"     \"contributions of the individuals\"   \n11 \"$call\"            \"summary statistics\"                 \n12 \"$call$centre\"     \"mean of the variables\"              \n13 \"$call$ecart.type\" \"standard error of the variables\"    \n14 \"$call$row.w\"      \"weights for the individuals\"        \n15 \"$call$col.w\"      \"weights for the variables\"          \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(dec.pca)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nPCA(X = db, scale.unit = TRUE, ncp = Inf, graph = F) \n\n\nEigenvalues\n                       Dim.1   Dim.2   Dim.3   Dim.4   Dim.5   Dim.6   Dim.7\nVariance               3.020   2.480   1.876   0.603   0.401   0.364   0.121\n% of var.             33.553  27.558  20.840   6.703   4.450   4.042   1.345\nCumulative % of var.  33.553  61.112  81.952  88.655  93.106  97.147  98.492\n                       Dim.8   Dim.9\nVariance               0.116   0.020\n% of var.              1.285   0.223\nCumulative % of var.  99.777 100.000\n\nIndividuals (the 10 first)\n                 Dist    Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3\n1            | 28.527 | 26.561 50.897  0.867 | -2.605  0.596  0.008 |  0.170\n2            | 22.945 | 20.037 28.966  0.763 | -3.187  0.892  0.019 | -0.173\n3            |  7.625 |  6.558  3.103  0.740 | -0.687  0.041  0.008 |  0.044\n4            |  4.198 |  3.777  1.029  0.810 | -0.869  0.066  0.043 | -0.030\n5            | 13.359 |  7.269  3.812  0.296 | -1.596  0.224  0.014 | -0.309\n6            |  8.371 |  6.242  2.811  0.556 | -1.608  0.227  0.037 | -0.178\n7            |  2.270 |  2.026  0.296  0.797 | -0.268  0.006  0.014 | -0.050\n8            |  3.733 |  2.836  0.580  0.577 | -0.178  0.003  0.002 | -0.026\n9            |  2.520 |  2.020  0.294  0.642 |  0.249  0.005  0.010 |  0.102\n10           |  1.641 |  0.770  0.043  0.220 | -0.691  0.042  0.177 | -0.582\n                ctr   cos2  \n1             0.003  0.000 |\n2             0.003  0.000 |\n3             0.000  0.000 |\n4             0.000  0.000 |\n5             0.011  0.001 |\n6             0.004  0.000 |\n7             0.000  0.000 |\n8             0.000  0.000 |\n9             0.001  0.002 |\n10            0.039  0.126 |\n\nVariables\n                Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3    ctr\nleverage     |  0.011  0.004  0.000 |  0.133  0.718  0.018 | -0.961 49.237\ncapital      |  0.833 22.956  0.693 | -0.145  0.852  0.021 | -0.007  0.002\nebitda.sales |  0.108  0.385  0.012 |  0.886 31.635  0.785 |  0.092  0.453\nemployees    |  0.722 17.249  0.521 | -0.120  0.582  0.014 | -0.013  0.009\nfunds        |  0.910 27.414  0.828 | -0.100  0.406  0.010 |  0.004  0.001\nincome       |  0.949 29.826  0.901 | -0.126  0.639  0.016 | -0.001  0.000\nreco         |  0.197  1.279  0.039 |  0.847 28.950  0.718 |  0.065  0.228\nrfin         | -0.020  0.013  0.000 | -0.130  0.684  0.017 |  0.961 49.281\nres.sales    |  0.162  0.872  0.026 |  0.939 35.533  0.881 |  0.122  0.789\n               cos2  \nleverage      0.923 |\ncapital       0.000 |\nebitda.sales  0.009 |\nemployees     0.000 |\nfunds         0.000 |\nincome        0.000 |\nreco          0.004 |\nrfin          0.924 |\nres.sales     0.015 |\n```\n\n\n:::\n\n```{.r .cell-code}\nget_pca(dec.pca)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPrincipal Component Analysis Results for variables\n ===================================================\n  Name       Description                                    \n1 \"$coord\"   \"Coordinates for the variables\"                \n2 \"$cor\"     \"Correlations between variables and dimensions\"\n3 \"$cos2\"    \"Cos2 for the variables\"                       \n4 \"$contrib\" \"contributions of the variables\"               \n```\n\n\n:::\n:::\n\n\n\n## Determinate the components\n\nDetermination of the number of components to retain:\n\n* Choose components with eigenvalue >> 1 (only is data was scaled) \n* use the Elbow method \n* by confirming % o acc.variance >>70-80%\n\n::: panel-tabset\n\n## R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(eigenvalues <- get_eigenvalue(dec.pca))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      eigenvalue variance.percent cumulative.variance.percent\nDim.1 3.01981357       33.5534841                    33.55348\nDim.2 2.48024591       27.5582879                    61.11177\nDim.3 1.87560196       20.8400217                    81.95179\nDim.4 0.60329604        6.7032894                    88.65508\nDim.5 0.40053809        4.4504232                    93.10551\nDim.6 0.36376923        4.0418803                    97.14739\nDim.7 0.12100680        1.3445200                    98.49191\nDim.8 0.11563428        1.2848254                    99.77673\nDim.9 0.02009411        0.2232679                   100.00000\n```\n\n\n:::\n\n```{.r .cell-code}\nfviz_eig(dec.pca, addlabels = TRUE, ylim = c(0, 50))\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/grafico-egeinvalues-1.png){width=672}\n:::\n:::\n\n\n**@SR FALTA EL ACUMULADO*\n\n**NOTE**: \n* `var$coord`: coordinates of variables in the factorial space\n.\n* `var$cos2`: represents the quality of representation for variables on the factor map. It’s calculated as the squared *coordinates*: `var$cos2` = `var$coord` * `var$coord`.\n \n* `var$contrib`: contains the contributions (in percentage) of the variables to the principal components. The contribution of a variable (var) to a given principal component is (in percentage) : (`var$cos2`* 100) / (total cos2 of the component).\n\n\n**Note** thas `var$coord` is the same as\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(Correl <- cor(db, pca1$scores))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  Comp.1     Comp.2       Comp.3       Comp.4       Comp.5\nleverage      0.01138524  0.1334780  0.960987296  0.003504303  0.020331669\ncapital       0.83260118 -0.1453964  0.006659214  0.063003785  0.277016832\nebitda.sales  0.10786497  0.8857966 -0.092203289  0.041077524  0.359062267\nemployees     0.72173284 -0.1201506  0.012877483  0.652342082 -0.120940300\nfunds         0.90987017 -0.1003801 -0.004370266 -0.353101047 -0.044727171\nincome        0.94904952 -0.1258779  0.001442060 -0.213594547 -0.071269397\nreco          0.19654360  0.8473617 -0.065362521 -0.035286423 -0.413057299\nrfin         -0.02013154 -0.1302399 -0.961410832  0.009789537  0.008618243\nres.sales     0.16227352  0.9387822 -0.121612199  0.020803494  0.045427607\n                  Comp.6       Comp.7       Comp.8        Comp.9\nleverage      0.01796349  0.082436928  0.225799676  0.0052654554\ncapital      -0.45261215  0.001460192  0.003805667  0.0029412341\nebitda.sales  0.18397091  0.160797765 -0.069859627 -0.0057812600\nemployees     0.15490671  0.002771334 -0.007328379  0.0162935840\nfunds         0.16252525  0.002970967 -0.013336180  0.0935895577\nincome        0.14674719 -0.004072478  0.015507418 -0.1047088149\nreco         -0.22870429  0.118035532 -0.031246770  0.0008211594\nrfin          0.01191328  0.091483530  0.222744395  0.0050170087\nres.sales     0.01872511 -0.256940048  0.093222707  0.0031691419\n```\n\n\n:::\n\n```{.r .cell-code}\ndec.pca$var$coord\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Dim.1      Dim.2        Dim.3        Dim.4        Dim.5\nleverage      0.01138524  0.1334780 -0.960987296  0.003504303  0.020331669\ncapital       0.83260118 -0.1453964 -0.006659214  0.063003785  0.277016832\nebitda.sales  0.10786497  0.8857966  0.092203289  0.041077524  0.359062267\nemployees     0.72173284 -0.1201506 -0.012877483  0.652342082 -0.120940300\nfunds         0.90987017 -0.1003801  0.004370266 -0.353101047 -0.044727171\nincome        0.94904952 -0.1258779 -0.001442060 -0.213594547 -0.071269397\nreco          0.19654360  0.8473617  0.065362521 -0.035286423 -0.413057299\nrfin         -0.02013154 -0.1302399  0.961410832  0.009789537  0.008618243\nres.sales     0.16227352  0.9387822  0.121612199  0.020803494  0.045427607\n                   Dim.6        Dim.7        Dim.8         Dim.9\nleverage      0.01796349  0.082436928  0.225799676  0.0052654554\ncapital      -0.45261215  0.001460192  0.003805667  0.0029412341\nebitda.sales  0.18397091  0.160797765 -0.069859627 -0.0057812600\nemployees     0.15490671  0.002771334 -0.007328379  0.0162935840\nfunds         0.16252525  0.002970967 -0.013336180  0.0935895577\nincome        0.14674719 -0.004072478  0.015507418 -0.1047088149\nreco         -0.22870429  0.118035532 -0.031246770  0.0008211594\nrfin          0.01191328  0.091483530  0.222744395  0.0050170087\nres.sales     0.01872511 -0.256940048  0.093222707  0.0031691419\n```\n\n\n:::\n:::\n\n\n\n## Python\n\n:::\n\n## Quality of variables into PCAs (cos$^2$)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(Quality <- Correl^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Comp.1     Comp.2       Comp.3       Comp.4       Comp.5\nleverage     0.0001296236 0.01781638 9.234966e-01 1.228014e-05 4.133768e-04\ncapital      0.6932247272 0.02114010 4.434514e-05 3.969477e-03 7.673833e-02\nebitda.sales 0.0116348519 0.78463562 8.501446e-03 1.687363e-03 1.289257e-01\nemployees    0.5208982951 0.01443617 1.658296e-04 4.255502e-01 1.462656e-02\nfunds        0.8278637188 0.01007617 1.909922e-05 1.246803e-01 2.000520e-03\nincome       0.9006949905 0.01584523 2.079538e-06 4.562263e-02 5.079327e-03\nreco         0.0386293887 0.71802181 4.272259e-03 1.245132e-03 1.706163e-01\nrfin         0.0004052788 0.01696243 9.243108e-01 9.583504e-05 7.427411e-05\nres.sales    0.0263326955 0.88131199 1.478953e-02 4.327854e-04 2.063667e-03\n                   Comp.6       Comp.7       Comp.8       Comp.9\nleverage     0.0003226868 6.795847e-03 5.098549e-02 2.772502e-05\ncapital      0.2048577565 2.132162e-06 1.448310e-05 8.650858e-06\nebitda.sales 0.0338452958 2.585592e-02 4.880367e-03 3.342297e-05\nemployees    0.0239960882 7.680292e-06 5.370513e-05 2.654809e-04\nfunds        0.0264144560 8.826642e-06 1.778537e-04 8.759005e-03\nincome       0.0215347377 1.658508e-05 2.404800e-04 1.096394e-02\nreco         0.0523056530 1.393239e-02 9.763606e-04 6.743027e-07\nrfin         0.0001419262 8.369236e-03 4.961507e-02 2.517038e-05\nres.sales    0.0003506298 6.601819e-02 8.690473e-03 1.004346e-05\n```\n\n\n:::\n\n```{.r .cell-code}\ndec.pca$var$cos2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Dim.1      Dim.2        Dim.3        Dim.4        Dim.5\nleverage     0.0001296236 0.01781638 9.234966e-01 1.228014e-05 4.133768e-04\ncapital      0.6932247272 0.02114010 4.434514e-05 3.969477e-03 7.673833e-02\nebitda.sales 0.0116348519 0.78463562 8.501446e-03 1.687363e-03 1.289257e-01\nemployees    0.5208982951 0.01443617 1.658296e-04 4.255502e-01 1.462656e-02\nfunds        0.8278637188 0.01007617 1.909922e-05 1.246803e-01 2.000520e-03\nincome       0.9006949905 0.01584523 2.079538e-06 4.562263e-02 5.079327e-03\nreco         0.0386293887 0.71802181 4.272259e-03 1.245132e-03 1.706163e-01\nrfin         0.0004052788 0.01696243 9.243108e-01 9.583504e-05 7.427411e-05\nres.sales    0.0263326955 0.88131199 1.478953e-02 4.327854e-04 2.063667e-03\n                    Dim.6        Dim.7        Dim.8        Dim.9\nleverage     0.0003226868 6.795847e-03 5.098549e-02 2.772502e-05\ncapital      0.2048577565 2.132162e-06 1.448310e-05 8.650858e-06\nebitda.sales 0.0338452958 2.585592e-02 4.880367e-03 3.342297e-05\nemployees    0.0239960882 7.680292e-06 5.370513e-05 2.654809e-04\nfunds        0.0264144560 8.826642e-06 1.778537e-04 8.759005e-03\nincome       0.0215347377 1.658508e-05 2.404800e-04 1.096394e-02\nreco         0.0523056530 1.393239e-02 9.763606e-04 6.743027e-07\nrfin         0.0001419262 8.369236e-03 4.961507e-02 2.517038e-05\nres.sales    0.0003506298 6.601819e-02 8.690473e-03 1.004346e-05\n```\n\n\n:::\n:::\n\n\n\n## Calculation of contributions\n\n### Contributions of variables for PCAs\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(Contrib <- Quality[, 1]/eigenvalues[1]) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    leverage      capital ebitda.sales    employees        funds       income \n4.292438e-05 2.295588e-01 3.852838e-03 1.724935e-01 2.741440e-01 2.982618e-01 \n        reco         rfin    res.sales \n1.279198e-02 1.342066e-04 8.719974e-03 \n```\n\n\n:::\n:::\n\n\n\nHere, contribution of variables in PC1, for another PCi,put the appropriate value (for instance, for PC2, change 1 for 2)\n\n## Coordinates of variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dec.pca$var$coord)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  Dim.1      Dim.2        Dim.3        Dim.4       Dim.5\nleverage     0.01138524  0.1334780 -0.960987296  0.003504303  0.02033167\ncapital      0.83260118 -0.1453964 -0.006659214  0.063003785  0.27701683\nebitda.sales 0.10786497  0.8857966  0.092203289  0.041077524  0.35906227\nemployees    0.72173284 -0.1201506 -0.012877483  0.652342082 -0.12094030\nfunds        0.90987017 -0.1003801  0.004370266 -0.353101047 -0.04472717\nincome       0.94904952 -0.1258779 -0.001442060 -0.213594547 -0.07126940\n                   Dim.6        Dim.7        Dim.8        Dim.9\nleverage      0.01796349  0.082436928  0.225799676  0.005265455\ncapital      -0.45261215  0.001460192  0.003805667  0.002941234\nebitda.sales  0.18397091  0.160797765 -0.069859627 -0.005781260\nemployees     0.15490671  0.002771334 -0.007328379  0.016293584\nfunds         0.16252525  0.002970967 -0.013336180  0.093589558\nincome        0.14674719 -0.004072478  0.015507418 -0.104708815\n```\n\n\n:::\n:::\n\n\n\n## Cos2: quality on the factore map \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dec.pca$var$cos2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Dim.1      Dim.2        Dim.3        Dim.4        Dim.5\nleverage     0.0001296236 0.01781638 9.234966e-01 1.228014e-05 0.0004133768\ncapital      0.6932247272 0.02114010 4.434514e-05 3.969477e-03 0.0767383251\nebitda.sales 0.0116348519 0.78463562 8.501446e-03 1.687363e-03 0.1289257114\nemployees    0.5208982951 0.01443617 1.658296e-04 4.255502e-01 0.0146265563\nfunds        0.8278637188 0.01007617 1.909922e-05 1.246803e-01 0.0020005198\nincome       0.9006949905 0.01584523 2.079538e-06 4.562263e-02 0.0050793269\n                    Dim.6        Dim.7        Dim.8        Dim.9\nleverage     0.0003226868 6.795847e-03 5.098549e-02 2.772502e-05\ncapital      0.2048577565 2.132162e-06 1.448310e-05 8.650858e-06\nebitda.sales 0.0338452958 2.585592e-02 4.880367e-03 3.342297e-05\nemployees    0.0239960882 7.680292e-06 5.370513e-05 2.654809e-04\nfunds        0.0264144560 8.826642e-06 1.778537e-04 8.759005e-03\nincome       0.0215347377 1.658508e-05 2.404800e-04 1.096394e-02\n```\n\n\n:::\n:::\n\n\n\n## Contributions to the principal components \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dec.pca$var$contrib)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Dim.1      Dim.2        Dim.3        Dim.4      Dim.5\nleverage      0.004292438  0.7183313 4.923734e+01  0.002035508  0.1032054\ncapital      22.955878272  0.8523390 2.364315e-03  0.657965014 19.1588084\nebitda.sales  0.385283782 31.6353961 4.532650e-01  0.279690703 32.1881276\nemployees    17.249352750  0.5820460 8.841405e-03 70.537540588  3.6517267\nfunds        27.414398261  0.4062569 1.018298e-03 20.666528605  0.4994581\nincome       29.826178656  0.6388574 1.108731e-04  7.562229359  1.2681258\n                   Dim.6        Dim.7       Dim.8       Dim.9\nleverage      0.08870647  5.616086758 44.09202250  0.13797586\ncapital      56.31530640  0.001762018  0.01252492  0.04305171\nebitda.sales  9.30405679 21.367328399  4.22051950  0.16633217\nemployees     6.59651401  0.006346992  0.04644396  1.32118761\nfunds         7.26132225  0.007294335  0.15380706 43.58991619\nincome        5.91988984  0.013705906  0.20796602 54.56293616\n```\n\n\n:::\n:::\n\n\n\n\n## Correlation circle \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_var(dec.pca, col.var = \"black\")\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/circulo-correlaciones-1.png){width=672}\n:::\n:::\n\n\n\nHere the top 5 by contribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dec.pca, choix = \"var\", select = \"contrib 5\")\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/circulo-correlaciones2-1.png){width=672}\n:::\n:::\n\n\n\nHere it is possible to obtain the latency for the dimensions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrplot(dec.pca$var$contrib, is.corr = FALSE)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/circulo-correlaciones3-1.png){width=672}\n:::\n:::\n\n\n\nContributions in both 1 and 2 dimensions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"var\", axes = 1:2)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/circulo-correlaciones4-1.png){width=672}\n:::\n:::\n\n\n\nContributions in Dim 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"var\", axes = 1) \n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/circulo-correlaciones5-1.png){width=672}\n:::\n:::\n\n\n\n**NOTES**:\n* Positively correlated variables are grouped together.\n* Negatively correlated variables are positioned on opposite sides of the plot origin (opposed quadrants).\n* The distance between variables and the origin measures the quality of the variables on the factor map. \n* Variables that are away from the origin are well represented on the factor map.\n\n\n## Quality of representation \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncorrplot(dec.pca$var$cos2, is.corr = FALSE)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/Calidad - representacion-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_cos2(dec.pca, choice = \"var\", axes = 1:2)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/Calidad - representacion-2.png){width=672}\n:::\n:::\n\n\n\n**NOTES**:\n\n* A high cos2 indicates a good representation of the variable on the principal component. In this case the variable is positioned close to the circumference of the correlation circle.\n* A low cos2 indicates that the variable is not perfectly represented by the PCs.\n* In this case the variable is close to the center of the circle.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_var(dec.pca, col.var = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n             repel = TRUE) # Avoid text overlapping\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/Calidad-representacion-coseno-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_var(dec.pca, alpha.var = \"cos2\")\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/Calidad-representacion-coseno-2.png){width=672}\n:::\n:::\n\n\n\n## Contributions of variables to PCs \n\n**NOTES**: \n* Variables that are correlated with *PC1* (i.e., `Dim.1`) and *PC2* (i.e., `Dim.2`) are the most important in explaining the variability in the data set.\n* Variables that do not correlated with any PC or correlated with the last dimensions are variables with low contribution and might be removed to simplify the overall analysis.\n* The larger the value of the contribution, the more the variable contributes to the component. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dec.pca$var$contrib, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Dim.1      Dim.2        Dim.3        Dim.4      Dim.5\nleverage      0.004292438  0.7183313 49.237343756  0.002035508  0.1032054\ncapital      22.955878272  0.8523390  0.002364315  0.657965014 19.1588084\nebitda.sales  0.385283782 31.6353961  0.453264962  0.279690703 32.1881276\nemployees    17.249352750  0.5820460  0.008841405 70.537540588  3.6517267\n                   Dim.6        Dim.7       Dim.8      Dim.9\nleverage      0.08870647  5.616086758 44.09202250 0.13797586\ncapital      56.31530640  0.001762018  0.01252492 0.04305171\nebitda.sales  9.30405679 21.367328399  4.22051950 0.16633217\nemployees     6.59651401  0.006346992  0.04644396 1.32118761\n```\n\n\n:::\n\n```{.r .cell-code}\ncorrplot(dec.pca$var$contrib, is.corr = FALSE) \n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/Calidad-representacion-contribucion-1.png){width=672}\n:::\n:::\n\n\n\n### Contributions of variables to PC1 \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"var\", axes = 1, top = 10)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/contribucionPC1-1.png){width=672}\n:::\n:::\n\n\n\n### Contributions of variables to PC2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"var\", axes = 2, top = 10)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/contribucionPC2-1.png){width=672}\n:::\n:::\n\n\n\n**IMPORTANT**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_var(dec.pca, col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/contribucion con gradientes-1.png){width=672}\n:::\n:::\n\n\n\n# AN EXTRA (Clustering approach) \n\n## Create a grouping variable using kmeans\n\nCreate 3 groups of variables (centers = 3)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nres.km <- kmeans(dec.pca$ var$coord, centers = 3, nstart = 25)\ngrp <- as.factor(res.km$cluster)\n```\n:::\n\n\n\n## Color variables by groups\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_var(dec.pca, col.var = grp, palette = c(\"#0073C2FF\", \"#EFC000FF\", \"#868686FF\"),\n             legend.title = \"Cluster\")\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/visualizar grupos-1.png){width=672}\n:::\n:::\n\n\n\n## Dimension description\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.desc <- dimdesc(dec.pca, axes = c(1:3), proba = 0.05)\n```\n:::\n\n\n\n### Description of dimension 1 \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.desc$Dim.1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nLink between the variable and the continuous variables (R-square)\n=================================================================================\n             correlation       p.value\nincome         0.9490495 2.524996e-231\nfunds          0.9098702 1.021917e-176\ncapital        0.8326012 2.450980e-119\nemployees      0.7217328  4.900441e-75\nreco           0.1965436  2.227664e-05\nres.sales      0.1622735  4.825241e-04\nebitda.sales   0.1078650  2.081210e-02\n```\n\n\n:::\n:::\n\n\n\n### Description of dimension 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.desc$Dim.2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nLink between the variable and the continuous variables (R-square)\n=================================================================================\n             correlation       p.value\nres.sales      0.9387822 1.261877e-213\nebitda.sales   0.8857966 1.796311e-154\nreco           0.8473617 1.041237e-127\nleverage       0.1334780  4.174009e-03\nfunds         -0.1003801  3.154400e-02\nemployees     -0.1201506  9.981717e-03\nincome        -0.1258779  6.928994e-03\nrfin          -0.1302399  5.196395e-03\ncapital       -0.1453964  1.789380e-03\n```\n\n\n:::\n:::\n\n\n\n### Description of dimension 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres.desc$Dim.3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nLink between the variable and the continuous variables (R-square)\n=================================================================================\n             correlation       p.value\nrfin          0.96141083 2.805589e-258\nres.sales     0.12161220  9.106320e-03\nebitda.sales  0.09220329  4.835783e-02\nleverage     -0.96098730 3.236079e-257\n```\n\n\n:::\n:::\n\n\n\nThe `dimdesc()` function calculates the correlation coefficient between a variable and a dimension and performs a significance test. This function is very useful in settings where there are many variables and allows to make the interpretation easier.\n\n**SUMMARY**: Latency of the *PCi* \n\n**Component 1:** The variables capital, employees, funds and income show correlations with component 1 greater than 0.7, indicating that they are highly correlated with it. That is, the higher the value of these four variables in a company, the higher its score in this component. Given the nature of these variables, this component represents the size of the company.\n\n**Component 2:** The variables `ebitda.sales`, reco and res.sales show correlations greater than 0.85 with component 2. This component could therefore represent the profitability of the company. The more profitable the company, the higher the score for the second component.\n\n**Component 3:** Finally, the variables leverage and rfin define component 3, which is related, in this way, to the company's indebtedness. The higher the leverage of a company and the lower the financial profitability, the higher the score it will achieve in the component, which will normally indicate a greater indebtedness of the company.\n\n## INDIVIDUALS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nind <- get_pca_ind(dec.pca)\n```\n:::\n\n\n\n### Coordinates of individuals\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ind$coord)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Dim.1      Dim.2       Dim.3      Dim.4      Dim.5     Dim.6       Dim.7\n1 26.560899 -2.6048220  0.16950893 -9.7219520 -0.7899918  2.517655  0.07645591\n2 20.037224 -3.1866039 -0.17313469  6.3329265  4.4472656 -7.407665  0.02300838\n3  6.557825 -0.6872858  0.04424650  0.2543293 -2.0934164  3.096068 -0.03341952\n4  3.777499 -0.8692112 -0.02985954 -0.6072561 -0.7457002  1.015876 -0.22054131\n5  7.269370 -1.5958065 -0.30924872  9.8007803 -2.9888914  4.228950  0.06718604\n6  6.242442 -1.6076261 -0.17795085  3.9481944 -1.8129481  3.017294 -0.11178882\n        Dim.8       Dim.9\n1  0.07477900  0.08113574\n2  0.14102601 -0.19460154\n3 -0.03913375 -0.79448010\n4  0.04841555 -0.76882545\n5 -0.04797579 -0.32223302\n6 -0.14869290  0.69102193\n```\n\n\n:::\n:::\n\n\n\n### Plots from QUALITY\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, col.ind = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n             repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-2.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, pointsize = \"cos2\", pointshape = 21, fill = \"#E7B800\", \n             repel = TRUE) # Avoid text overlapping (slow if many points))\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-3.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, col.ind = \"cos2\", pointsize = \"cos2\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n             repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-4.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, col.ind = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), \n             repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-5.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, pointsize = \"contrib\", pointshape = 21, fill = \"#E7B800\", \n             repel = TRUE) # Avoid text overlapping (slow if many points))\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-6.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, col.ind = \"contrib\", pointsize =\"contrib\", \n             gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"), repel = TRUE)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plots1q-7.png){width=672}\n:::\n:::\n\n\n\n### Plots from CONTRIBUTION\n\n#### Total contribution on PC1 and PC2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"ind\", axes = 1:2)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plotsc1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"ind\", axes = 1:2, top = 10)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plotsc1-2.png){width=672}\n:::\n:::\n\n\n\n#### Individuals on dimensions 2 and 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_ind(dec.pca, axes = c(2, 3))\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plotsc2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_contrib(dec.pca, choice = \"ind\", axes = 1:3, top=10)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plotsc2-2.png){width=672}\n:::\n:::\n\n\n\n#### Plot contributions complet\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfviz_pca_biplot(dec.pca, repel = TRUE,axes=c(1,2), col.var = \"#2E9FDF\", col.ind = \"#696969\")\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/plotscombinated-1.png){width=672}\n:::\n:::\n\n\n\n**NOTES:** \n\nRoughly speaking a biplot (looking at Individuals) can be interpreted as follow:\n* an individual that is on the same side of a given variable has a high value for this variable\n* an individual that is on the opposite side of a given variable has a low value for this variable.\n\n## PCA suplementary variables\n\nSupplementary variables have no influence on the principal components of the analysis. They are going to help to interpret the dimensions of variability. Add also supplementary categorical variable, *Competition*. The categories' centres of gravity of this new variable appear on the graph of the individuals.They are located at the barycentre of the individuals who took them and they represent an average individual. \n\n**CHECK Help (PCA) and this example**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"decathlon\")\nres.pca <- PCA(decathlon, quanti.sup = 11:12, quali.sup = 13, graph = FALSE)\nres.pca$quanti.sup\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$coord\n            Dim.1       Dim.2       Dim.3      Dim.4      Dim.5\nRank   -0.6705104  0.05139812 -0.05834304 -0.1614077 -0.3500257\nPoints  0.9561543 -0.01651613 -0.06635212  0.2360079  0.1136256\n\n$cor\n            Dim.1       Dim.2       Dim.3      Dim.4      Dim.5\nRank   -0.6705104  0.05139812 -0.05834304 -0.1614077 -0.3500257\nPoints  0.9561543 -0.01651613 -0.06635212  0.2360079  0.1136256\n\n$cos2\n           Dim.1        Dim.2       Dim.3      Dim.4      Dim.5\nRank   0.4495841 0.0026417671 0.003403910 0.02605246 0.12251798\nPoints 0.9142310 0.0002727826 0.004402604 0.05569973 0.01291077\n```\n\n\n:::\n\n```{.r .cell-code}\nfviz_pca_var(res.pca)\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n\n```{.r .cell-code}\nres.pca$quali\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$coord\n              Dim.1       Dim.2      Dim.3       Dim.4      Dim.5\nDecastar -0.6001211 -0.03765491  0.2889044 -0.13955756  0.4013710\nOlympicG  0.2786276  0.01748264 -0.1341342  0.06479458 -0.1863508\n\n$cos2\n             Dim.1       Dim.2      Dim.3      Dim.4     Dim.5\nDecastar 0.4027688 0.001585701 0.09334399 0.02178135 0.1801648\nOlympicG 0.4027688 0.001585701 0.09334399 0.02178135 0.1801648\n\n$v.test\n             Dim.1      Dim.2     Dim.3      Dim.4     Dim.5\nDecastar -1.429753 -0.1231198  1.050392 -0.5850181  2.090235\nOlympicG  1.429753  0.1231198 -1.050392  0.5850181 -2.090235\n\n$dist\n Decastar  OlympicG \n0.9456076 0.4390321 \n\n$eta2\n                 Dim.1        Dim.2     Dim.3       Dim.4     Dim.5\nCompetition 0.05110487 0.0003789623 0.0275831 0.008556153 0.1092271\n```\n\n\n:::\n\n```{.r .cell-code}\nfviz_pca_ind(res.pca, habillage = 13, addEllipses =TRUE, ellipse.type = \"confidence\", \n             palette = \"jco\", repel = TRUE) \n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/unnamed-chunk-47-2.png){width=672}\n:::\n\n```{.r .cell-code}\nfviz_pca_biplot(res.pca, \n                col.ind = decathlon$Competition, palette = \"jco\", \n                addEllipses = TRUE, label = \"var\",\n                col.var = \"black\", repel = TRUE,\n                legend.title = \"Competition\") \n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/unnamed-chunk-47-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(res.pca, cex = 0.8, habillage = \"Competition\")\n```\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/unnamed-chunk-47-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplotellipses(res.pca, level = 0.95)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ggrepel: 3 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ACP_files/figure-html/unnamed-chunk-47-5.png){width=672}\n:::\n:::\n\n\n\n# Bibliografia \n\n* More elegant graphs and options. Check at: [http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/112-pca-principal-component-analysis-essentials/](http://www.sthda.com/english/articles/31-principal-component-methods-in-r-practical-guide/112-pca-principal-component-analysis-essentials/)\n\n# To go further:\n\nTo add supplementary individuals, use the following argument of the PCA function: `ind.sup`. In most PCAs, the weight of the individuals is equal to 1/(number of individuals). However, it is sometimes necessary to give a specific weight to some individuals. To do so, the user will have to use the argument: `row.w`. \n\nIt can also be interesting to give a specific weight to some variables. Here, the user will have to use the argument: `col.w`\n",
    "supporting": [
      "ACP_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}